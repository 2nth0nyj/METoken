{
  "contractName": "METFaucet",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_METoken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_METOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback",
      "payable": true
    },
    {
      "inputs": [],
      "name": "METOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "METoken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "withdraw_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_METoken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_METOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"METOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"METoken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"withdraw_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/Desktop/Workspace/Projects/solidity/METoken/contracts/METFaucet.sol\":\"METFaucet\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Desktop/Workspace/Projects/solidity/METoken/contracts/METFaucet.sol\":{\"keccak256\":\"0x42aad41e77cbd4a0f281f2f7e1966a04763b1cdf9dd2c96d7ec8c97d20adb1ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bbc12dad91d39a19f0bc41e6310df930d5c86179e78e39391d9f61b4076fa5c\",\"dweb:/ipfs/QmbaonNRBmPVLv3kSoLubHLvR3LPRDFzQM8azm27dkH113\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45b1f9043c0fb450272f20ed19ef633fcba1b129d602651a856dfae1a2243a2c\",\"dweb:/ipfs/QmUTSQiDikkcNtTtyDpkEwCM5ztVUUh9c1inBukn6HC5Vr\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"openzeppelin-solidity/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610591380380610591833981810160405281019061003291906100e4565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061019b565b6000815190506100c98161016d565b92915050565b6000815190506100de81610184565b92915050565b600080604083850312156100fb576100fa610168565b5b6000610109858286016100cf565b925050602061011a858286016100ba565b9150509250929050565b600061012f82610148565b9050919050565b600061014182610124565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b61017681610124565b811461018157600080fd5b50565b61018d81610136565b811461019857600080fd5b50565b6103e7806101aa6000396000f3fe6080604052600436106100385760003560e01c80632e1a7d4d14610047578063ad577be314610070578063f27f0fac1461009b57610042565b3661004257600080fd5b600080fd5b34801561005357600080fd5b5061006e6004803603810190610069919061024b565b6100c6565b005b34801561007c57600080fd5b506100856101aa565b60405161009291906102f7565b60405180910390f35b3480156100a757600080fd5b506100b06101ce565b6040516100bd91906102a5565b60405180910390f35b6103e88111156100d557600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633846040518463ffffffff1660e01b8152600401610154939291906102c0565b602060405180830381600087803b15801561016e57600080fd5b505af1158015610182573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a6919061021e565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008151905061020381610383565b92915050565b6000813590506102188161039a565b92915050565b6000602082840312156102345761023361037e565b5b6000610242848285016101f4565b91505092915050565b6000602082840312156102615761026061037e565b5b600061026f84828501610209565b91505092915050565b61028181610312565b82525050565b6102908161035a565b82525050565b61029f81610350565b82525050565b60006020820190506102ba6000830184610278565b92915050565b60006060820190506102d56000830186610278565b6102e26020830185610278565b6102ef6040830184610296565b949350505050565b600060208201905061030c6000830184610287565b92915050565b600061031d82610330565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103658261036c565b9050919050565b600061037782610330565b9050919050565b600080fd5b61038c81610324565b811461039757600080fd5b50565b6103a381610350565b81146103ae57600080fd5b5056fea26469706673582212204c414cf2ecc14116c5bf76ff27da39aae258953edddaa14f13b9ba62a96f4cc464736f6c63430008050033",
  "deployedBytecode": "0x6080604052600436106100385760003560e01c80632e1a7d4d14610047578063ad577be314610070578063f27f0fac1461009b57610042565b3661004257600080fd5b600080fd5b34801561005357600080fd5b5061006e6004803603810190610069919061024b565b6100c6565b005b34801561007c57600080fd5b506100856101aa565b60405161009291906102f7565b60405180910390f35b3480156100a757600080fd5b506100b06101ce565b6040516100bd91906102a5565b60405180910390f35b6103e88111156100d557600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633846040518463ffffffff1660e01b8152600401610154939291906102c0565b602060405180830381600087803b15801561016e57600080fd5b505af1158015610182573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a6919061021e565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008151905061020381610383565b92915050565b6000813590506102188161039a565b92915050565b6000602082840312156102345761023361037e565b5b6000610242848285016101f4565b91505092915050565b6000602082840312156102615761026061037e565b5b600061026f84828501610209565b91505092915050565b61028181610312565b82525050565b6102908161035a565b82525050565b61029f81610350565b82525050565b60006020820190506102ba6000830184610278565b92915050565b60006060820190506102d56000830186610278565b6102e26020830185610278565b6102ef6040830184610296565b949350505050565b600060208201905061030c6000830184610287565b92915050565b600061031d82610330565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103658261036c565b9050919050565b600061037782610330565b9050919050565b600080fd5b61038c81610324565b811461039757600080fd5b50565b6103a381610350565b81146103ae57600080fd5b5056fea26469706673582212204c414cf2ecc14116c5bf76ff27da39aae258953edddaa14f13b9ba62a96f4cc464736f6c63430008050033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1825:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:8"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:8",
                "type": ""
              }
            ],
            "src": "7:143:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "232:93:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "242:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "257:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "251:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "251:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "242:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "313:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_ERC20_$736",
                      "nodeType": "YulIdentifier",
                      "src": "273:39:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "273:46:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "273:46:8"
                }
              ]
            },
            "name": "abi_decode_t_contract$_ERC20_$736_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "210:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "218:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "226:5:8",
                "type": ""
              }
            ],
            "src": "156:169:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "438:426:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "484:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "486:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "486:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "486:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "459:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "468:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "455:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "455:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "480:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "451:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "451:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "448:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "577:141:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "592:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "606:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "596:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "621:87:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "680:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "691:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "676:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "676:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "700:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_ERC20_$736_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "631:44:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:77:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "621:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "728:129:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "743:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "757:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "747:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "773:74:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "819:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "830:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "815:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "815:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "839:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "783:31:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "783:64:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "773:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20_$736t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "400:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "411:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "423:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "431:6:8",
                "type": ""
              }
            ],
            "src": "331:533:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "910:35:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "920:19:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "936:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "930:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "930:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "920:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "903:6:8",
                "type": ""
              }
            ],
            "src": "870:75:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "996:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1006:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1035:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1017:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1017:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1006:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "978:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "988:7:8",
                "type": ""
              }
            ],
            "src": "951:96:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1111:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1121:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1150:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1132:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1132:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1121:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_ERC20_$736",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1093:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1103:7:8",
                "type": ""
              }
            ],
            "src": "1053:109:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1213:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1223:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1238:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1245:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1234:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1234:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1223:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1195:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1205:7:8",
                "type": ""
              }
            ],
            "src": "1168:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1389:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1406:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1409:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1399:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1399:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1399:12:8"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1300:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1512:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1529:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1532:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1522:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1522:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1522:12:8"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1423:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1589:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1646:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1655:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1658:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1648:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1648:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1648:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1612:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1637:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1619:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1619:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1609:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1609:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1602:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1602:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1599:2:8"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1582:5:8",
                "type": ""
              }
            ],
            "src": "1546:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1730:92:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1800:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1809:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1812:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1802:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1802:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1802:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1753:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1791:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_ERC20_$736",
                              "nodeType": "YulIdentifier",
                              "src": "1760:30:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1760:37:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1750:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1750:48:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1743:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1743:56:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1740:2:8"
                }
              ]
            },
            "name": "validator_revert_t_contract$_ERC20_$736",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1723:5:8",
                "type": ""
              }
            ],
            "src": "1674:148:8"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_contract$_ERC20_$736_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC20_$736(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$736t_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$736_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ERC20_$736(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_ERC20_$736(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$736(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3599:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:77:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "92:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "86:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "86:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "77:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "132:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "108:23:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "108:30:8"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "45:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "53:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "61:5:8",
                "type": ""
              }
            ],
            "src": "7:137:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "202:87:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "212:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "234:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "221:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "221:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "212:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "277:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "250:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "250:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "250:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "180:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "188:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "196:5:8",
                "type": ""
              }
            ],
            "src": "150:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "369:271:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "415:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "417:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "417:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "417:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "390:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "399:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "386:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "386:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "382:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "382:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "379:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "508:125:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "523:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "537:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "527:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "552:71:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "595:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "606:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "591:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "591:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "615:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "562:28:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "562:61:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "552:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "339:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "350:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "362:6:8",
                "type": ""
              }
            ],
            "src": "295:345:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "712:263:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "758:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "760:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "760:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "760:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "733:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "742:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "729:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "729:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "754:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "725:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "725:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "722:2:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "851:117:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "866:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "880:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "870:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "895:63:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "930:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "941:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "926:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "926:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "950:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "905:20:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "905:53:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "895:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "682:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "693:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "705:6:8",
                "type": ""
              }
            ],
            "src": "646:329:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1046:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1063:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1086:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1068:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1068:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1056:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1056:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1056:37:8"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1034:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1041:3:8",
                "type": ""
              }
            ],
            "src": "981:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1183:79:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1200:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1249:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ERC20_$736_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1205:43:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1205:50:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1193:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1193:63:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1193:63:8"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ERC20_$736_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1171:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1178:3:8",
                "type": ""
              }
            ],
            "src": "1105:157:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1333:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1350:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1373:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1355:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1355:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1343:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1343:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1343:37:8"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1321:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1328:3:8",
                "type": ""
              }
            ],
            "src": "1268:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1490:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1500:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1512:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1523:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1508:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1508:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1500:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1580:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1593:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1604:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1589:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1589:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1536:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1536:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1536:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1462:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1474:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1485:4:8",
                "type": ""
              }
            ],
            "src": "1392:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1774:288:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1784:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1796:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1807:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1792:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1792:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1784:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1864:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1877:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1888:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1873:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1873:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1820:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1820:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1820:71:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1945:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1958:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1969:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1954:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1954:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1901:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1901:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1901:72:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2027:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2040:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2051:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2036:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2036:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1983:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1983:72:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1983:72:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1730:9:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1742:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1750:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1758:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1769:4:8",
                "type": ""
              }
            ],
            "src": "1620:442:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2179:137:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2189:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2201:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2212:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2197:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2197:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2189:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2282:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2295:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2306:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2291:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2291:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_ERC20_$736_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2225:56:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2225:84:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2225:84:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$736__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2151:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2163:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2174:4:8",
                "type": ""
              }
            ],
            "src": "2068:248:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2362:35:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2372:19:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2388:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2382:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2382:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "2372:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2355:6:8",
                "type": ""
              }
            ],
            "src": "2322:75:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2448:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2458:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2487:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2469:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2469:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2458:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2430:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2440:7:8",
                "type": ""
              }
            ],
            "src": "2403:96:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2547:48:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2557:32:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2582:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2575:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2575:13:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2568:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2568:21:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2557:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2529:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2539:7:8",
                "type": ""
              }
            ],
            "src": "2505:90:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2646:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2656:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2671:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2678:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2667:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2667:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2656:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2628:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2638:7:8",
                "type": ""
              }
            ],
            "src": "2601:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2778:32:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2788:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2799:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2788:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2760:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2770:7:8",
                "type": ""
              }
            ],
            "src": "2733:77:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2889:79:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2899:63:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2956:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_ERC20_$736_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2912:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2912:50:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2899:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC20_$736_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2869:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2879:9:8",
                "type": ""
              }
            ],
            "src": "2816:152:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3047:53:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3057:37:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3088:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3070:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3070:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3057:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC20_$736_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3027:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3037:9:8",
                "type": ""
              }
            ],
            "src": "2974:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3195:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3212:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3215:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3205:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3205:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3205:12:8"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "3106:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3318:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3335:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3338:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3328:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3328:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3328:12:8"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "3229:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3392:76:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3446:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3455:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3458:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3448:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3448:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3448:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3415:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3437:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "3422:14:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3422:21:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3412:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3412:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3405:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3405:40:8"
                  },
                  "nodeType": "YulIf",
                  "src": "3402:2:8"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3385:5:8",
                "type": ""
              }
            ],
            "src": "3352:116:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3517:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3574:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3583:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3586:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3576:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3576:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3576:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3540:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3565:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "3547:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3547:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3537:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3537:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3530:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3530:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "3527:2:8"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3510:5:8",
                "type": ""
              }
            ],
            "src": "3474:122:8"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ERC20_$736_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$736_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$736__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$736_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_ERC20_$736_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ERC20_$736_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$736_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "123:564:1:-:0;;;329:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;393:8;383:7;;:18;;;;;;;;;;;;;;;;;;418:9;407:8;;:20;;;;;;;;;;;;;;;;;;329:103;;123:564;;7:143:8;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:169::-;226:5;257:6;251:13;242:22;;273:46;313:5;273:46;:::i;:::-;232:93;;;;:::o;331:533::-;423:6;431;480:2;468:9;459:7;455:23;451:32;448:2;;;486:79;;:::i;:::-;448:2;606:1;631:77;700:7;691:6;680:9;676:22;631:77;:::i;:::-;621:87;;577:141;757:2;783:64;839:7;830:6;819:9;815:22;783:64;:::i;:::-;773:74;;728:129;438:426;;;;;:::o;951:96::-;988:7;1017:24;1035:5;1017:24;:::i;:::-;1006:35;;996:51;;;:::o;1053:109::-;1103:7;1132:24;1150:5;1132:24;:::i;:::-;1121:35;;1111:51;;;:::o;1168:126::-;1205:7;1245:42;1238:5;1234:54;1223:65;;1213:81;;;:::o;1423:117::-;1532:1;1529;1522:12;1546:122;1619:24;1637:5;1619:24;:::i;:::-;1612:5;1609:35;1599:2;;1658:1;1655;1648:12;1599:2;1589:79;:::o;1674:148::-;1760:37;1791:5;1760:37;:::i;:::-;1753:5;1750:48;1740:2;;1812:1;1809;1802:12;1740:2;1730:92;:::o;123:564:1:-;;;;;;;",
  "deployedSourceMap": "123:564:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;673:8;;;123:564;630:8;;;436:159;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;146:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;170:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;436:159;518:4;499:15;:23;;491:32;;;;;;531:7;;;;;;;;;;:20;;;552:8;;;;;;;;;;;562:10;574:15;531:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;436:159;:::o;146:20::-;;;;;;;;;;;;:::o;170:23::-;;;;;;;;;;;;;:::o;7:137:8:-;61:5;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:139::-;196:5;234:6;221:20;212:29;;250:33;277:5;250:33;:::i;:::-;202:87;;;;:::o;295:345::-;362:6;411:2;399:9;390:7;386:23;382:32;379:2;;;417:79;;:::i;:::-;379:2;537:1;562:61;615:7;606:6;595:9;591:22;562:61;:::i;:::-;552:71;;508:125;369:271;;;;:::o;646:329::-;705:6;754:2;742:9;733:7;729:23;725:32;722:2;;;760:79;;:::i;:::-;722:2;880:1;905:53;950:7;941:6;930:9;926:22;905:53;:::i;:::-;895:63;;851:117;712:263;;;;:::o;981:118::-;1068:24;1086:5;1068:24;:::i;:::-;1063:3;1056:37;1046:53;;:::o;1105:157::-;1205:50;1249:5;1205:50;:::i;:::-;1200:3;1193:63;1183:79;;:::o;1268:118::-;1355:24;1373:5;1355:24;:::i;:::-;1350:3;1343:37;1333:53;;:::o;1392:222::-;1485:4;1523:2;1512:9;1508:18;1500:26;;1536:71;1604:1;1593:9;1589:17;1580:6;1536:71;:::i;:::-;1490:124;;;;:::o;1620:442::-;1769:4;1807:2;1796:9;1792:18;1784:26;;1820:71;1888:1;1877:9;1873:17;1864:6;1820:71;:::i;:::-;1901:72;1969:2;1958:9;1954:18;1945:6;1901:72;:::i;:::-;1983;2051:2;2040:9;2036:18;2027:6;1983:72;:::i;:::-;1774:288;;;;;;:::o;2068:248::-;2174:4;2212:2;2201:9;2197:18;2189:26;;2225:84;2306:1;2295:9;2291:17;2282:6;2225:84;:::i;:::-;2179:137;;;;:::o;2403:96::-;2440:7;2469:24;2487:5;2469:24;:::i;:::-;2458:35;;2448:51;;;:::o;2505:90::-;2539:7;2582:5;2575:13;2568:21;2557:32;;2547:48;;;:::o;2601:126::-;2638:7;2678:42;2671:5;2667:54;2656:65;;2646:81;;;:::o;2733:77::-;2770:7;2799:5;2788:16;;2778:32;;;:::o;2816:152::-;2879:9;2912:50;2956:5;2912:50;:::i;:::-;2899:63;;2889:79;;;:::o;2974:126::-;3037:9;3070:24;3088:5;3070:24;:::i;:::-;3057:37;;3047:53;;;:::o;3229:117::-;3338:1;3335;3328:12;3352:116;3422:21;3437:5;3422:21;:::i;:::-;3415:5;3412:32;3402:2;;3458:1;3455;3448:12;3402:2;3392:76;:::o;3474:122::-;3547:24;3565:5;3547:24;:::i;:::-;3540:5;3537:35;3527:2;;3586:1;3583;3576:12;3527:2;3517:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.5 ;\n\nimport 'openzeppelin-solidity/contracts/token/ERC20/ERC20.sol';\n\ncontract METFaucet {\n  ERC20 public METoken;\n  address public METOwner;\n\n  // METFaucet constructor, provide the address of METoken contract and\n  // the owner address we will be approved to transferFrom\n  constructor(ERC20 _METoken, address _METOwner) { \n    METoken = _METoken;\n    METOwner = _METOwner;\n  }\n\n  function withdraw(uint withdraw_amount) public {\n      require(withdraw_amount <= 1000);\n      METoken.transferFrom(METOwner, msg.sender, withdraw_amount);\n  }\n\n  fallback() external payable  { revert(); }\n  receive() external payable { revert(); }\n\n}\n",
  "sourcePath": "D:/Desktop/Workspace/Projects/solidity/METoken/contracts/METFaucet.sol",
  "ast": {
    "absolutePath": "/D/Desktop/Workspace/Projects/solidity/METoken/contracts/METFaucet.sol",
    "exportedSymbols": {
      "Context": [
        862
      ],
      "ERC20": [
        736
      ],
      "IERC20": [
        814
      ],
      "IERC20Metadata": [
        839
      ],
      "METFaucet": [
        167
      ]
    },
    "id": 168,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 108,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 109,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 168,
        "sourceUnit": 737,
        "src": "58:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 167,
        "linearizedBaseContracts": [
          167
        ],
        "name": "METFaucet",
        "nameLocation": "132:9:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "ad577be3",
            "id": 112,
            "mutability": "mutable",
            "name": "METoken",
            "nameLocation": "159:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 167,
            "src": "146:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$736",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 111,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 110,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 736,
                "src": "146:5:1"
              },
              "referencedDeclaration": 736,
              "src": "146:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$736",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f27f0fac",
            "id": 114,
            "mutability": "mutable",
            "name": "METOwner",
            "nameLocation": "185:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 167,
            "src": "170:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 113,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "170:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "376:56:1",
              "statements": [
                {
                  "expression": {
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 122,
                      "name": "METoken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "383:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$736",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 123,
                      "name": "_METoken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "393:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$736",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "383:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$736",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "383:18:1"
                },
                {
                  "expression": {
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 126,
                      "name": "METOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "407:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 127,
                      "name": "_METOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "418:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "407:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "407:20:1"
                }
              ]
            },
            "id": 131,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "_METoken",
                  "nameLocation": "347:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "341:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$736",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 116,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 115,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 736,
                      "src": "341:5:1"
                    },
                    "referencedDeclaration": 736,
                    "src": "341:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$736",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "_METOwner",
                  "nameLocation": "365:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "357:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "340:35:1"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "376:0:1"
            },
            "scope": 167,
            "src": "329:103:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "483:112:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 137,
                          "name": "withdraw_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "499:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "518:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "499:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 136,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "491:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "491:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "491:32:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 145,
                        "name": "METOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "552:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 146,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "562:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "562:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 148,
                        "name": "withdraw_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "574:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 142,
                        "name": "METoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "531:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$736",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 435,
                      "src": "531:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "531:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "531:59:1"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "445:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "withdraw_amount",
                  "nameLocation": "459:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "454:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "454:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "453:22:1"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "483:0:1"
            },
            "scope": 167,
            "src": "436:159:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "628:13:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 155,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "630:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "630:8:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "630:8:1"
                }
              ]
            },
            "id": 159,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "607:2:1"
            },
            "returnParameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "628:0:1"
            },
            "scope": 167,
            "src": "599:42:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "671:13:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 162,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "673:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "673:8:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "673:8:1"
                }
              ]
            },
            "id": 166,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "651:2:1"
            },
            "returnParameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "671:0:1"
            },
            "scope": 167,
            "src": "644:40:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 168,
        "src": "123:564:1",
        "usedErrors": []
      }
    ],
    "src": "32:656:1"
  },
  "legacyAST": {
    "absolutePath": "/D/Desktop/Workspace/Projects/solidity/METoken/contracts/METFaucet.sol",
    "exportedSymbols": {
      "Context": [
        862
      ],
      "ERC20": [
        736
      ],
      "IERC20": [
        814
      ],
      "IERC20Metadata": [
        839
      ],
      "METFaucet": [
        167
      ]
    },
    "id": 168,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 108,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:1"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 109,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 168,
        "sourceUnit": 737,
        "src": "58:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 167,
        "linearizedBaseContracts": [
          167
        ],
        "name": "METFaucet",
        "nameLocation": "132:9:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "ad577be3",
            "id": 112,
            "mutability": "mutable",
            "name": "METoken",
            "nameLocation": "159:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 167,
            "src": "146:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$736",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 111,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 110,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 736,
                "src": "146:5:1"
              },
              "referencedDeclaration": 736,
              "src": "146:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$736",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f27f0fac",
            "id": 114,
            "mutability": "mutable",
            "name": "METOwner",
            "nameLocation": "185:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 167,
            "src": "170:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 113,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "170:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "376:56:1",
              "statements": [
                {
                  "expression": {
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 122,
                      "name": "METoken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "383:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$736",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 123,
                      "name": "_METoken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 117,
                      "src": "393:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$736",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "383:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$736",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "383:18:1"
                },
                {
                  "expression": {
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 126,
                      "name": "METOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 114,
                      "src": "407:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 127,
                      "name": "_METOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "418:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "407:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "407:20:1"
                }
              ]
            },
            "id": 131,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "_METoken",
                  "nameLocation": "347:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "341:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$736",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 116,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 115,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 736,
                      "src": "341:5:1"
                    },
                    "referencedDeclaration": 736,
                    "src": "341:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$736",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "_METOwner",
                  "nameLocation": "365:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "357:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "340:35:1"
            },
            "returnParameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "376:0:1"
            },
            "scope": 167,
            "src": "329:103:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "483:112:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 137,
                          "name": "withdraw_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 133,
                          "src": "499:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "518:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "499:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 136,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "491:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "491:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "ExpressionStatement",
                  "src": "491:32:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 145,
                        "name": "METOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "552:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 146,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "562:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "562:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 148,
                        "name": "withdraw_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 133,
                        "src": "574:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 142,
                        "name": "METoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "531:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$736",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 435,
                      "src": "531:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "531:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "531:59:1"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "445:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "mutability": "mutable",
                  "name": "withdraw_amount",
                  "nameLocation": "459:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "454:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "454:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "453:22:1"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "483:0:1"
            },
            "scope": 167,
            "src": "436:159:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "628:13:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 155,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "630:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "630:8:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "630:8:1"
                }
              ]
            },
            "id": 159,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "607:2:1"
            },
            "returnParameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "628:0:1"
            },
            "scope": 167,
            "src": "599:42:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "671:13:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 162,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "673:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "673:8:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "673:8:1"
                }
              ]
            },
            "id": 166,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "651:2:1"
            },
            "returnParameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "671:0:1"
            },
            "scope": 167,
            "src": "644:40:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 168,
        "src": "123:564:1",
        "usedErrors": []
      }
    ],
    "src": "32:656:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.5+commit.a4f2e591.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x0873F235AfBD354B6208C060E52F224610FdcB0F",
      "transactionHash": "0x69a746c9f1947a4ef4d5caba54ab1749df84de493ec04e92cff773bedef1b4b5"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-21T08:14:40.017Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}